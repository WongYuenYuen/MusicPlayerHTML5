var audio = {
	audioEl: null,
	lrc: $(".lrcContent").eq(0),
	lrcStep: 0,
	lrcData: null,
	lrcStatus: false,
	formatTime: function(c) {
		if (!isFinite(c) || c < 0) {
			return "";
		} else {
			var a = Math.floor(c / 60),
				b = Math.floor(c) % 60;
			return (a < 10 ? "0" + a : a) + ":" + (b < 10 ? "0" + b : b);
		}
	},
	createPlayer: function() {
		this.audioEl = new Audio();
		_audio = this.audioEl;
		_audio.addEventListener("loadedmetadata", this.onLoadedmetadata, false);
		_audio.addEventListener("canplay", this.onCanPlay, false);
		_audio.addEventListener("play", this.onPlay, false);
		_audio.addEventListener("pause", this.onPause, false);
		_audio.addEventListener("ended", this.onEnded, false);
		_audio.addEventListener("error", this.onError, false);
		_audio.addEventListener("progress", this.onProgress, false);
		_audio.addEventListener("timeupdate", this.onTimeUpdate, false);
		document.getElementsByClassName("process-bar-ctl")[0].addEventListener("change", function() {
			try {
				_audio.currentTime = this.value;
			} catch (a) {}
		}, false);
		document.getElementsByClassName("process-bar-ctl")[0].addEventListener("dragover", function(a) {
			console.log("ko");
			a.preventDefault();
		}, false);
		return this;
	},
	setSrc: function(a) {
		this.audioEl.pause();
		this.audioEl.src = null;
		this.audioEl.src = a;
		document.getElementsByClassName("current-process")[0].style.width = "0%";
		document.getElementsByClassName("process-bar-ctl")[0].value = 0;
		document.getElementsByClassName("process-buffer")[0].style.width = "0%";
	},
	setLoop: function() {
		this.audioEl.loop = true;
	},
	unsetLoop: function() {
		this.audioEl.loop = false;
	},
	setVolume: function(a) {
		this.audioEl.volume = a;
	},
	play: function() {
		this.audioEl.pause();
		this.audioEl.play();
	},
	pause: function() {
		this.audioEl.pause();
	},
	onLoadedmetadata: function() {
		var a = audio.audioEl;
		var b = audio.formatTime(a.duration);
		document.getElementsByClassName("total-time")[0].innerHTML = b;
		document.getElementsByClassName("process-bar-ctl")[0].max = a.duration;
	},
	onCanPlay: function() {},
	onPlay: function() {},
	onPause: function() {},
	onEndedHandle: function() {},
	onEnded: function() {
		if (typeof audio.onEndedHandle == "function") {
			audio.onEndedHandle();
		}
	},
	onError: function() {},
	onProgress: function() {},
	onTimeUpdate: function() {
		audioEl = audio.audioEl;
		var n = audioEl.currentTime,
			d = audioEl.duration;
		var c = document.getElementsByClassName("current-process")[0];
		c.style.width = n / d * 100 + "%";
		document.getElementsByClassName("process-bar-ctl")[0].value = n;
		document.getElementsByClassName("current-time")[0].innerHTML = audio.formatTime(n);
		try {
			var p = audioEl.buffered.end(0);
			document.getElementsByClassName("process-buffer")[0].style.width = p / d * 100 + "%";
		} catch (k) {}
		if (!audio.lrcData || !audio.lrcStatus) {
			return;
		}
		var l = audio.lrcData.words,
			a = audio.lrcData.times,
			j = a.length,
			g = audio.lrcStep,
			b = audio.lrc,
			f = n * 1000 | 0;
		for (; g < j; g++) {
			var o = a[g];
			if (f > o && f < a[g + 1]) {
				var h = b.find('[data-lrctime="' + o + '"]');
				var m = h.attr("data-lrctop");
				b.css("marginTop", m + "px").find("p.cur").removeClass("cur");
				h.addClass("cur");
				break;
			}
		}
	}
};